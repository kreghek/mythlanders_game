name: Temp Build

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime:
          - win-x64
          - linux-x64

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Setup .NET 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    
    - name: Setup wine64 and 7z
      run: sudo apt install wine64 p7zip-full
    
    - name: Setup Wine for effect compilation
      run: |
        #!/bin/bash
        # This script is used to setup the needed Wine environment
        # so that mgfxc can be run on Linux / macOS systems.
        
        # check dependencies
        if ! type "wine64" > /dev/null 2>&1
        then
            echo "wine64 not found"
            exit 1
        fi
        
        if ! type "7z" > /dev/null 2>&1
        then
            echo "7z not found"
            exit 1
        fi
        
        # init wine stuff
        export WINEARCH=win64
        export WINEPREFIX=$HOME/.winemonogame
        wine64 wineboot
        
        TEMP_DIR="${TMPDIR:-/tmp}"
        SCRIPT_DIR="$TEMP_DIR/winemg2"
        mkdir -p "$SCRIPT_DIR"
        
        # get dotnet
        DOTNET_URL="https://download.visualstudio.microsoft.com/download/pr/adeab8b1-1c44-41b2-b12a-156442f307e9/65ebf805366410c63edeb06e53959383/dotnet-sdk-3.1.201-win-x64.zip"
        curl $DOTNET_URL --output "$SCRIPT_DIR/dotnet-sdk.zip"
        7z x "$SCRIPT_DIR/dotnet-sdk.zip" -o"$WINEPREFIX/drive_c/windows/system32/"
        
        # get d3dcompiler_47
        FIREFOX_URL="https://download-installer.cdn.mozilla.net/pub/firefox/releases/62.0.3/win64/ach/Firefox%20Setup%2062.0.3.exe"
        curl $FIREFOX_URL --output "$SCRIPT_DIR/firefox.exe"
        7z x "$SCRIPT_DIR/firefox.exe" -o"$SCRIPT_DIR/firefox_data/"
        cp -f "$SCRIPT_DIR/firefox_data/core/d3dcompiler_47.dll" "$WINEPREFIX/drive_c/windows/system32/d3dcompiler_47.dll"
        
        # append MGFXC_WINE_PATH env variable
        echo "export MGFXC_WINE_PATH=$HOME/.winemonogame" >> ~/.profile
        echo "export MGFXC_WINE_PATH=$HOME/.winemonogame" >> ~/.zprofile
        
        # cleanup
        rm -rf "$SCRIPT_DIR"

    - name: Restore dependencies
      run: dotnet restore Rpg.Client/Rpg.Client.sln

    - name: Build
      run: dotnet build Rpg.Client/Rpg.Client.sln --no-restore

    - name: Test
      run: dotnet test Rpg.Client/Rpg.Client.sln --no-build --verbosity normal

    - name: Publish
      run: dotnet publish Rpg.Client/Rpg.Client.sln --verbosity normal --output bin --runtime ${{ matrix.runtime }} --configuration Release
    
    - name: Write version to file
      uses: DamianReeves/write-file-action@v1.0
      with:
        path: bin/version.txt
        contents: |
          ver 0.1-dev#${{ github.run_number }}
          ${{ github.sha }}
        write-mode: overwrite

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        name: ewar-${{ matrix.runtime }}
        path: bin
